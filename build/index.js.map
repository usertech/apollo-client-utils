{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 92f357f370fbefe0423a","webpack:///external \"apollo-cache-inmemory\"","webpack:///./src/createIntrospectionFragmentMatcher.js","webpack:///./src/createDefaultApolloClient.js","webpack:///./src/createMockLink.js","webpack:///./src/index.js","webpack:///external \"apollo-client\""],"names":["introspectionQuery","gql","makePromise","execute","introspectionQueryResult","__schema","types","type","introspectionQueryResultData","cache","createIntrospectionFragmentMatcher","cacheOptions","fragmentMatcher","createMockLink","defaultOperationDelay","operationsDelays","IntrospectionFragmentMatcherQuery","mocks","preserveResolvers","makeExecutableSchemaParams","schema","makeExecutableSchema","addMockFunctionsToSchema","mockLink","context","getContext","delayLink","presetOperationDelay","operationDelay","setTimeout","handle","next","observer","error","complete","ApolloLink"],"mappings":"AAAA,eACA,iDADA,CAEA,kBAFA,CAGA,qCAHA,CAIA,4CAJA,CAKA,wBALA,CAMA,4CANA,CAQA,sCACC,CATD,EASC,kCATD,CASC,WACD,M,aCNA,cAGA,QACA,oBAGA,YACA,GADA,CAEA,IAFA,CAGA,UAHA,EAaA,MANA,mCAMA,CAHA,MAGA,UACA,CAxBA,SA4DA,MAhCA,MAgCA,CA7BA,KA6BA,CA1BA,oBACA,QADA,EAEA,2BACA,eADA,CAEA,aAFA,CAGA,KAHA,EAMA,CAkBA,CAfA,gBACA,sBACA,WAA2B,mBAA4B,CADvD,CAEA,WAAiC,QAAe,CAFhD,CAIA,MADA,aACA,EACA,CASA,CANA,kBAAsD,gDAA+D,CAMrH,CAHA,MAGA,S,eC7DA,0C,cAAA,gC,kTCIMA,GAAqBC,GAAI;;;;;;;;;;;;KA6B/B,GAf2C,CAAO,CAAP,MAAO,CAAP,qCACT,uBAAMC,sBAAYC,oBAAc,CAAhC,OAAgC,CAAdA,CAAZD,CAAN,uBASjC,MATME,IASN,CATiC,EACI,CACpCC,SAAU,CACTC,MAAOF,6BACN,KADMA,IACIG,kBADJH,CADE,CAD0B,CAQrC,GAAO,mCAAiC,CACvCI,8BADuC,CAAjC,CAAP,CATiC,0BADlC,CAA2C,C,qKCI3C,GAjBkC,CAAO,QAAP,oCAAO,CAAP,0CAWjC,MAXiC,GASnB,GATmB,gBASnB,GAEd,GAAO,mBAAiB,QAEvBC,OAFuB,CAAjB,CAAP,CAXiC,eACjC,KADiC,GAKd,gBAAMC,EAAmC,CAAzC,MAAyC,CAAnCA,CAAN,6BAFlBC,WAECC,iBAFDD,EAEkB,kDALc,aAAlC,CAAkC,C,iCCyCnBE,GAAf,GA1CuB,KAQjB,SAPLC,qBAOK,IAPLA,GAOK,WAPmB,GAOnB,WANLC,gBAMK,IANLA,GAMK,WANc,CAClBC,kCAAmC,IADjB,CAMd,GAHLC,EAGK,EAHLA,KAGK,CAFLC,EAEK,EAFLA,iBAEK,CADFC,EACE,8EAEL,KAAMC,GAASC,OAAf,sBAAeA,IAAf,CACAC,mCAAyB,kBAAzBA,mBAAyB,CAAzBA,CAHK,MAICC,GAAW,iBAAe,UAE/BC,QAAS,CAAC,CAAD,YAAC,CAAD,GAAoBC,GAFE,CAAf,CAJZ,CAUCC,EAAY,iBAAe,OAAwB,yBAElDC,EAAN,IAFwD,CAGlDC,EAAN,WACC,cAJuD,CAKxD,MAAO,kBAAe,KAAc,CACnC,MASA,MAPAC,YAAW,IAAM,CAChBC,EAAS,eAA6B,CACrCC,KAAMC,OAD+B,IAC/BA,GAD+B,CAErCC,MAAOD,QAF8B,IAE9BA,GAF8B,CAGrCE,SAAUF,kBAH2B,CAA7B,CADVH,IAOA,CAAO,IAAM,IACAC,eADb,CAVD,CAAO,CALR,CAAkB,CAVb,CA+BL,MAAOK,mBAAP,KAAOA,CAvCR,CA0CetB,CC9Cf,uD,CAAA,gE,CAAA,4C,cCAA,kC,cAAA,gC,cAAA,uC,cAAA,kC,IPAA,C","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@usertech/apollo-client-utils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@usertech/apollo-client-utils\"] = factory();\n\telse\n\t\troot[\"@usertech/apollo-client-utils\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 92f357f370fbefe0423a","module.exports = require(\"apollo-cache-inmemory\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-cache-inmemory\"\n// module id = 0\n// module chunks = 0","import { execute, makePromise } from 'apollo-link';\nimport { IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';\nimport gql from 'graphql-tag';\n\nconst introspectionQuery = gql`\n\tquery IntrospectionFragmentMatcherQuery {\n\t\t__schema {\n\t\t\ttypes {\n\t\t\t\tkind\n\t\t\t\tname\n\t\t\t\tpossibleTypes {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst createIntrospectionFragmentMatcher = async ({ link }) => {\n\tconst introspectionQueryResult = await makePromise(execute(link, { query: introspectionQuery }));\n\tconst introspectionQueryResultData = {\n\t\t__schema: {\n\t\t\ttypes: introspectionQueryResult.data.__schema.types.filter(\n\t\t\t\t(type) => type.possibleTypes !== null,\n\t\t\t),\n\t\t},\n\t};\n\n\treturn new IntrospectionFragmentMatcher({\n\t\tintrospectionQueryResultData,\n\t});\n};\n\nexport default createIntrospectionFragmentMatcher;\n\n\n\n// WEBPACK FOOTER //\n// ./src/createIntrospectionFragmentMatcher.js","import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nimport createIntrospectionFragmentMatcher from './createIntrospectionFragmentMatcher';\n\nconst createDefaultApolloClient = async ({ link, useIntrospectionFragmentMatcher = false }) => {\n\tlet cacheOptions = {};\n\tif (useIntrospectionFragmentMatcher) {\n\t\tcacheOptions = {\n\t\t\t...cacheOptions,\n\t\t\tfragmentMatcher: await createIntrospectionFragmentMatcher({ link }),\n\t\t};\n\t}\n\n\tconst cache = new InMemoryCache(cacheOptions);\n\n\treturn new ApolloClient({\n\t\tlink,\n\t\tcache,\n\t});\n};\n\nexport default createDefaultApolloClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/createDefaultApolloClient.js","import { ApolloLink, Observable } from 'apollo-link';\nimport { SchemaLink } from 'apollo-link-schema';\nimport { makeExecutableSchema, addMockFunctionsToSchema } from 'graphql-tools';\n\nconst createMockLink = ({\n\tdefaultOperationDelay = 500,\n\toperationsDelays = {\n\t\tIntrospectionFragmentMatcherQuery: 1200,\n\t},\n\tmocks,\n\tpreserveResolvers,\n\t...makeExecutableSchemaParams\n}) => {\n\t// mock link\n\tconst schema = makeExecutableSchema(makeExecutableSchemaParams);\n\taddMockFunctionsToSchema({ schema, mocks, preserveResolvers });\n\tconst mockLink = new SchemaLink({\n\t\tschema,\n\t\tcontext: ({ getContext }) => getContext(),\n\t});\n\n\t// delay link\n\tconst delayLink = new ApolloLink((operation, forward) => {\n\t\tconst { operationName } = operation;\n\t\tconst presetOperationDelay = operationsDelays[operationName];\n\t\tconst operationDelay =\n\t\t\ttypeof presetOperationDelay !== 'undefined' ? presetOperationDelay : defaultOperationDelay;\n\t\treturn new Observable((observer) => {\n\t\t\tlet handle;\n\t\t\t// eslint-disable-next-line\n\t\t\tsetTimeout(() => {\n\t\t\t\thandle = forward(operation).subscribe({\n\t\t\t\t\tnext: observer.next.bind(observer),\n\t\t\t\t\terror: observer.error.bind(observer),\n\t\t\t\t\tcomplete: observer.complete.bind(observer),\n\t\t\t\t});\n\t\t\t}, operationDelay);\n\t\t\treturn () => {\n\t\t\t\tif (handle) handle.unsubscribe();\n\t\t\t};\n\t\t});\n\t});\n\n\treturn ApolloLink.from([delayLink, mockLink]);\n};\n\nexport default createMockLink;\n\n\n\n// WEBPACK FOOTER //\n// ./src/createMockLink.js","import createDefaultApolloClient from './createDefaultApolloClient';\nimport createIntrospectionFragmentMatcher from './createIntrospectionFragmentMatcher';\nimport createMockLink from './createMockLink';\n\nexport { createDefaultApolloClient, createIntrospectionFragmentMatcher, createMockLink };\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"apollo-client\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-client\"\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}