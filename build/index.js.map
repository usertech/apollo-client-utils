{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2d77866f8d1fd8692cf7","webpack:///external \"apollo-cache-inmemory\"","webpack:///./src/createIntrospectionFragmentMatcher.js","webpack:///external \"apollo-link\"","webpack:///./src/index.js","webpack:///./src/createDefaultApolloClient.js","webpack:///external \"apollo-client\"","webpack:///external \"graphql-tag\"","webpack:///./src/createMockLink.js","webpack:///external \"apollo-link-schema\"","webpack:///external \"graphql-tools\""],"names":["introspectionQuery","gql","createIntrospectionFragmentMatcher","link","makePromise","execute","query","introspectionQueryResult","introspectionQueryResultData","__schema","types","data","filter","type","possibleTypes","IntrospectionFragmentMatcher","createDefaultApolloClient","useIntrospectionFragmentMatcher","cacheOptions","fragmentMatcher","cache","InMemoryCache","ApolloClient","createMockLink","defaultOperationDelay","operationsDelays","IntrospectionFragmentMatcherQuery","mocks","preserveResolvers","makeExecutableSchemaParams","schema","makeExecutableSchema","addMockFunctionsToSchema","mockLink","SchemaLink","context","getContext","delayLink","ApolloLink","operation","forward","operationName","presetOperationDelay","operationDelay","Observable","observer","handle","setTimeout","subscribe","next","bind","error","complete","unsubscribe","from"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@usertech/apollo-client-utils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@usertech/apollo-client-utils\"] = factory();\n\telse\n\t\troot[\"@usertech/apollo-client-utils\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2d77866f8d1fd8692cf7","module.exports = require(\"apollo-cache-inmemory\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-cache-inmemory\"\n// module id = 0\n// module chunks = 0","import { execute, makePromise } from 'apollo-link';\nimport { IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';\nimport gql from 'graphql-tag';\n\nconst introspectionQuery = gql`\n\tquery IntrospectionFragmentMatcherQuery {\n\t\t__schema {\n\t\t\ttypes {\n\t\t\t\tkind\n\t\t\t\tname\n\t\t\t\tpossibleTypes {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst createIntrospectionFragmentMatcher = async ({ link }) => {\n\tconst introspectionQueryResult = await makePromise(execute(link, { query: introspectionQuery }));\n\tconst introspectionQueryResultData = {\n\t\t__schema: {\n\t\t\ttypes: introspectionQueryResult.data.__schema.types.filter(\n\t\t\t\t(type) => type.possibleTypes !== null,\n\t\t\t),\n\t\t},\n\t};\n\n\treturn new IntrospectionFragmentMatcher({\n\t\tintrospectionQueryResultData,\n\t});\n};\n\nexport default createIntrospectionFragmentMatcher;\n\n\n\n// WEBPACK FOOTER //\n// ./src/createIntrospectionFragmentMatcher.js","module.exports = require(\"apollo-link\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link\"\n// module id = 2\n// module chunks = 0","import createDefaultApolloClient from './createDefaultApolloClient';\nimport createIntrospectionFragmentMatcher from './createIntrospectionFragmentMatcher';\nimport createMockLink from './createMockLink';\n\nexport { createDefaultApolloClient, createIntrospectionFragmentMatcher, createMockLink };\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nimport createIntrospectionFragmentMatcher from './createIntrospectionFragmentMatcher';\n\nconst createDefaultApolloClient = async ({ link, useIntrospectionFragmentMatcher = false }) => {\n\tlet cacheOptions = {};\n\tif (useIntrospectionFragmentMatcher) {\n\t\tcacheOptions = {\n\t\t\t...cacheOptions,\n\t\t\tfragmentMatcher: await createIntrospectionFragmentMatcher({ link }),\n\t\t};\n\t}\n\n\tconst cache = new InMemoryCache(cacheOptions);\n\n\treturn new ApolloClient({\n\t\tlink,\n\t\tcache,\n\t});\n};\n\nexport default createDefaultApolloClient;\n\n\n\n// WEBPACK FOOTER //\n// ./src/createDefaultApolloClient.js","module.exports = require(\"apollo-client\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-client\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"graphql-tag\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql-tag\"\n// module id = 7\n// module chunks = 0","import { ApolloLink, Observable } from 'apollo-link';\nimport { SchemaLink } from 'apollo-link-schema';\nimport { makeExecutableSchema, addMockFunctionsToSchema } from 'graphql-tools';\n\nconst createMockLink = ({\n\tdefaultOperationDelay = 500,\n\toperationsDelays = {\n\t\tIntrospectionFragmentMatcherQuery: 1200,\n\t},\n\tmocks,\n\tpreserveResolvers,\n\t...makeExecutableSchemaParams\n}) => {\n\t// mock link\n\tconst schema = makeExecutableSchema(makeExecutableSchemaParams);\n\taddMockFunctionsToSchema({ schema, mocks, preserveResolvers });\n\tconst mockLink = new SchemaLink({\n\t\tschema,\n\t\tcontext: ({ getContext }) => getContext(),\n\t});\n\n\t// delay link\n\tconst delayLink = new ApolloLink((operation, forward) => {\n\t\tconst { operationName } = operation;\n\t\tconst presetOperationDelay = operationsDelays[operationName];\n\t\tconst operationDelay =\n\t\t\ttypeof presetOperationDelay !== 'undefined' ? presetOperationDelay : defaultOperationDelay;\n\t\treturn new Observable((observer) => {\n\t\t\tlet handle;\n\t\t\t// eslint-disable-next-line\n\t\t\tsetTimeout(() => {\n\t\t\t\thandle = forward(operation).subscribe({\n\t\t\t\t\tnext: observer.next.bind(observer),\n\t\t\t\t\terror: observer.error.bind(observer),\n\t\t\t\t\tcomplete: observer.complete.bind(observer),\n\t\t\t\t});\n\t\t\t}, operationDelay);\n\t\t\treturn () => {\n\t\t\t\tif (handle) handle.unsubscribe();\n\t\t\t};\n\t\t});\n\t});\n\n\treturn ApolloLink.from([delayLink, mockLink]);\n};\n\nexport default createMockLink;\n\n\n\n// WEBPACK FOOTER //\n// ./src/createMockLink.js","module.exports = require(\"apollo-link-schema\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-link-schema\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"graphql-tools\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"graphql-tools\"\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}